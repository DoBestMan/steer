name: Deploy branch against mock API

on:
  repository_dispatch:
    types: [release_qa]
  push:
    branches:
      - "int-*"
      - dev
      - dev-st

jobs:
  deploy-against-mock:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    # Add mock prefix to branch name, remove int prefix if present
    # dev            => mock-dev
    # int-my-branch  => mock-my-branch
    - name: Get new branch name
      shell: bash
      run: |
        if [[ "${{ github.event_name }}" == "push" ]]; then ORIGINAL_BRANCH="${{ github.ref }}"; else ORIGINAL_BRANCH="refs/heads/qa"; fi
        NEW_BRANCH="${ORIGINAL_BRANCH/refs\/heads\//}"
        NEW_BRANCH="mock-${NEW_BRANCH/int-/}"
        echo "##[set-output name=new_branch;]$(echo ${NEW_BRANCH})"
        echo "##[set-output name=original_branch;]$(echo ${ORIGINAL_BRANCH})"
      id: extract_branch
    - name: Merge into mock branch, change last commit
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git fetch origin ${{ steps.extract_branch.outputs.original_branch }}
        git checkout -b ${{ steps.extract_branch.outputs.new_branch }}
        echo "${{ steps.extract_branch.outputs.new_branch }}" > file-to-force-new-deploy.txt
        git add .
        git commit -m 'Mock Deploy'
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ steps.extract_branch.outputs.new_branch }}
        force: true
